#!/usr/bin/env node

const fs = require('fs')
const path = require('path')

console.log('üöÄ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –¥–µ–ø–ª–æ—é –Ω–∞ Render...\n')

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤
const requiredFiles = [
  'package.json',
  'prisma/schema.prisma',
  'next.config.mjs',
  'render.yaml',
  'DEPLOYMENT.md'
]

console.log('üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤:')
requiredFiles.forEach(file => {
  if (fs.existsSync(file)) {
    console.log(`‚úÖ ${file}`)
  } else {
    console.log(`‚ùå ${file} - –û–¢–°–£–¢–°–¢–í–£–ï–¢!`)
  }
})

// –ü—Ä–æ–≤–µ—Ä—è–µ–º package.json –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –Ω—É–∂–Ω—ã—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤
console.log('\nüì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∫—Ä–∏–ø—Ç–æ–≤ –≤ package.json:')
const packageJson = JSON.parse(fs.readFileSync('package.json', 'utf8'))
const requiredScripts = ['build', 'start', 'postinstall']

requiredScripts.forEach(script => {
  if (packageJson.scripts && packageJson.scripts[script]) {
    console.log(`‚úÖ ${script}: ${packageJson.scripts[script]}`)
  } else {
    console.log(`‚ùå ${script} - –û–¢–°–£–¢–°–¢–í–£–ï–¢!`)
  }
})

// –ü—Ä–æ–≤–µ—Ä—è–µ–º Prisma —Å—Ö–µ–º—É
console.log('\nüóÑÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ Prisma –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:')
const prismaSchema = fs.readFileSync('prisma/schema.prisma', 'utf8')
if (prismaSchema.includes('provider = "postgresql"')) {
  console.log('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: PostgreSQL')
} else if (prismaSchema.includes('provider = "sqlite"')) {
  console.log('‚ö†Ô∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: SQLite (–Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞ PostgreSQL –¥–ª—è Render)')
} else {
  console.log('‚ùå –ù–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –ø—Ä–æ–≤–∞–π–¥–µ—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö')
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º .gitignore
console.log('\nüìù –ü—Ä–æ–≤–µ—Ä–∫–∞ .gitignore:')
if (fs.existsSync('.gitignore')) {
  const gitignore = fs.readFileSync('.gitignore', 'utf8')
  const requiredIgnores = ['.env', 'node_modules', '.next', 'dist']
  
  requiredIgnores.forEach(ignore => {
    if (gitignore.includes(ignore)) {
      console.log(`‚úÖ ${ignore}`)
    } else {
      console.log(`‚ö†Ô∏è ${ignore} - —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–æ–±–∞–≤–∏—Ç—å`)
    }
  })
} else {
  console.log('‚ö†Ô∏è .gitignore –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç')
}

console.log('\nüîß –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –¥–µ–ø–ª–æ—è:')
console.log('1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∫–æ–¥ –∑–∞–≥—Ä—É–∂–µ–Ω –≤ GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π')
console.log('2. –°–æ–∑–¥–∞–π—Ç–µ PostgreSQL –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –Ω–∞ Render')
console.log('3. –°–æ–∑–¥–∞–π—Ç–µ Web Service –∏ —É–∫–∞–∂–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è')
console.log('4. –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –≤ DEPLOYMENT.md')

console.log('\nüìö –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏:')
console.log('- Render Dashboard: https://dashboard.render.com')
console.log('- Render Docs: https://render.com/docs')
console.log('- PostgreSQL –Ω–∞ Render: https://render.com/docs/databases')

console.log('\n‚úÖ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –£–¥–∞—á–Ω–æ–≥–æ –¥–µ–ø–ª–æ—è! üöÄ')
