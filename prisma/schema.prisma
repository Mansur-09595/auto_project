// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String
  role      String   @default("admin")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  cars  Car[]
  parts Part[]
}

model Car {
  id            String   @id @default(cuid())
  brand         String
  model         String
  generation    String?
  year          Int
  mileage       Int
  transmission  String
  fuel          String
  drive         String
  bodyType      String
  color         String
  power         Int
  engineVolume  Float
  euroStandard  String
  vin           String   @unique
  condition     String
  customs       Boolean
  vat           Boolean
  owners        Int
  price         Float
  currency      String
  negotiable    Boolean
  city          String
  description   String
  photos        String   // JSON string of photo URLs
  status        String   @default("draft")
  views         Int      @default(0)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  adminId String
  admin   Admin  @relation(fields: [adminId], references: [id], onDelete: Cascade)
}

model Part {
  id          String   @id @default(cuid())
  name        String
  brand       String
  model       String
  yearFrom    Int?
  yearTo      Int?
  category    String   // engine, transmission, brakes, suspension, etc.
  condition   String   // new, used, refurbished
  price       Float
  currency    String
  negotiable  Boolean  @default(false)
  city        String
  description String
  photos      String   // JSON string of photo URLs
  status      String   @default("draft")
  views       Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  adminId String
  admin   Admin  @relation(fields: [adminId], references: [id], onDelete: Cascade)
}
